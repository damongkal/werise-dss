<?php

class oryza2000_api
{
    const _TEST_MODE = false;
    
    private $country;
    private $station;
    private $year;
    private $wtype;
    public $error_code = 0;
    public $error_msg = null;

    public function exec($country, $station, $year, $wtype)
    {
        set_time_limit(600);
        global $weather_files;
        
        $this->country = $country;
        $this->station = intval($station);
        $this->year = intval($year);
        $this->wtype = $wtype;

        // get country specific CONTROL.DAT
        $control = file_get_contents(_DATA_DIR . _DATA_SUBDIR_ORYZA . $weather_files[$this->country]['dir'] . 'CONTROL.DAT');        
        file_put_contents(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'CONTROL.DAT', $control);
        
        // prepare RERUNs.DAT
        $datasets = $this->EditRerun();

        // remove previous output of op.dat
        file_put_contents(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'op.dat', '');

        $cmd = _DATA_DIR . _DATA_SUBDIR_ORYZA . 'oryza.bat';
        exec($cmd);
        
        $op_size = filesize(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'op.dat');
        if ($op_size==0)
        {
            $datasets = false;
            $this->error_code = 1;
            $this->error_msg = 'No output generated by Oryza2000.';
        }

        return $datasets;
    }

    /**
     * edit RERUN-BASIC-SET.DAT template according to parameters
     */
    private function EditRerun()
    {
        global $weather_files;

        if ($this->wtype == oryza_data::_REALTIME)
        {
            $subdir = _DATA_SUBDIR_WEATHER_REALTIME;
        }
        if ($this->wtype == oryza_data::_FORECAST)
        {
            $subdir = _DATA_SUBDIR_WEATHER_FORECAST;
        }

        $wtrdir = str_replace('/', '\\', _DATA_DIR . $subdir . $weather_files[$this->country]['dir']);
        $template_set = file_get_contents(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'RERUNS-BASIC-SET.DAT');
        $template_set = str_replace('{iyear}', $this->year, $template_set);
        $template_set = str_replace('{wtrdir}', $wtrdir, $template_set);
        $template_set = str_replace('{cntr}', $weather_files[$this->country]['file'], $template_set);
        $template_set = str_replace('{istn}', $this->station, $template_set);
                
        $datasets = array();
        $template_edit = '';
        $runnum = 1;
        foreach ($this->getVarieties($this->country) as $variety)
        {
            foreach($this->getFertils() as $fertkey => $fertil)
            {                
                $template = $template_set;
                
                $template = str_replace('{filei1}', $variety, $template);
                $template = str_replace('{fertil}', $fertil, $template);

                $reruns = '';
                $sttimes = array();
                foreach($this->getSTTime() as $j)
                {
                    $sttimes[$runnum] = $j;
                    $tmp = $template;
                    $tmp = str_replace('{runnum}', $runnum, $tmp);
                    $tmp = str_replace('{sttime}', $j, $tmp);
                    $reruns .= $tmp;
                    $runnum++;
                }

                $datasets[] = array(
                    'country' => $this->country,
                    'station' => $this->station,
                    'year' => $this->year,
                    'wtype' => $this->wtype,
                    'variety' => $variety,
                    'fert' => $fertkey,
                    'sttimes' => $sttimes
                );                
                
                $template_edit = $template_edit . $reruns;
                
            }
        }        
        
        file_put_contents(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'RERUNS.DAT', $template_edit);
        return $datasets;        
    }

    public function getVarieties($country)
    {       
        $ret = array();
                
        foreach (explode(',',_ORYZA_VARIETIES) as $rec)
        {
            $ret[] = trim($rec);
        }
        
        if (self::_TEST_MODE)
        {
            return array($ret[0]);
        }                

        switch ($country)
        {
            case 'PH':
                $ret[] = _ORYZA_LCHK_PH;
                break;
            case 'ID':
                $ret[] = _ORYZA_LCHK_ID;
                break;
            case 'TH':
                $ret[] = _ORYZA_LCHK_TH;
                break;
            case 'LA':
                $ret[] = _ORYZA_LCHK_LA;
                break;            
        }
        return $ret;
    }
    
    private function getFertils()
    {            
        $no_fertil = " 0.,    0., \r
366.,    0.";

        $blanket_fertil = " 0.,    0.,\r
21.,    0.,\r
22.,   30.,\r
23.,    0.,\r
39.,    0.,\r
40.,   60.,\r
41.,    0.,\r
56.,    0.,\r
57.,   30.,\r
58.,    0.,\r
366.,   0.";
        
        if (self::_TEST_MODE)
        {
            return array($blanket_fertil);
        }          
        
        return array($no_fertil,$blanket_fertil);
    }
    
    private function getSTTime()
    {
        $ret = array();
        $refdate = DateTime::createFromFormat('Y-m-d', ($this->year-1).'-12-31');
        for($month=1; $month<=12;$month++)
        {
            $day1date = DateTime::createFromFormat('Y-m-d', $this->year.'-'.$month.'-01');
            $diff = $refdate->diff($day1date);
            $ret[] = $diff->format('%a');
            
            $day15date = DateTime::createFromFormat('Y-m-d', $this->year.'-'.$month.'-15');
            $diff = $refdate->diff($day15date);
            $ret[] = $diff->format('%a');            
        }        
        return $ret;
    }
    
    public static function getModelOutput()
    {
        return file_get_contents(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'model.log');
    }
    
    public static function getOpFile()
    {
        return @fopen(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'op.dat', "r");
    }    
    
    public static function getResFile()
    {
        return @fopen(_DATA_DIR . _DATA_SUBDIR_ORYZA . 'res.dat', "r");
    }    
}